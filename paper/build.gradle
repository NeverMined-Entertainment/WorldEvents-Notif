plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

dependencies {
    compileOnly "com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT"
    compileOnly "me.clip:placeholderapi:2.11.6"
    compileOnly "org.nevermined:WorldEvents-api:1.0.1"

    implementation project(":api")

    implementation "me.lucko:helper:5.6.14"
    implementation "com.google.inject:guice:7.0.0"
    implementation "com.google.inject.extensions:guice-assistedinject:7.0.0"

    implementation "me.wyne:WUtils-config:2.5.3"
    implementation "me.wyne:WUtils-log:3.0.3"
    implementation("me.wyne:WUtils-i18n:2.3.8") {
        exclude group: "net.kyori"
    }
}

shadowJar {
    archiveBaseName.set("WorldEvents-Notifications")
    archiveClassifier.set("")
    def outputDir = project.hasProperty('shadowJarOutputDir') ? project.shadowJarOutputDir : "${buildDir}/libs"
    destinationDirectory = file(outputDir)
    minimize()
    relocate "me.lucko.helper", "org.nevermined.worldevents.shadow.lucko.helper"
    relocate "com.google.inject", "org.nevermined.worldevents.shadow.google.guice"
    relocate "com.google.common", "org.nevermined.worldevents.shadow.google.common"
    relocate "me.wyne.wutils", "org.nevermined.worldevents.shadow.wutils"
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
